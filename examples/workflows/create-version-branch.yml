# Will be triggered either by 'pushing any tag' or 'manual trigger' with additional inputs
name: >-
  Create a version branch

on:
  # Run by manual trigger
  workflow_dispatch:
    inputs:
      base-branch:
        description: >-
          The base branch that a versioning branch will be based.
        required: true
        default: main
      name-prefix:
        description: >-
          The name prefix to include in the new branch name.
          The new branch name format is: <prefix><version>_verbra. Example: Rel_branchv1.0.0-rc.1_verbra
          The version will be retrieved from the base-branch, bumped according to the version-level.
        required: false
        default: rel_
      version-level:
        description: >-
          The level of the semver version.
          Accepted inputs: major, minor, patch, and prerelease.
        required: true
        default: patch
      pre-id:
        description: >-
          A valid semver pre-release identifier. Used in command: npm version --preid=<pre-id>
          If specified, the versioning behavior will become 'premajor', 'preminor', 'prepatch', and 'prerelease'.
        required: false
      custom-version:
        description: >-
          The custom version to bump to. If specified, it will be used as the version.
          It needs to be a valid semver format.
        required: false
jobs:
  main_job:
    runs-on: ubuntu-latest
    name: main job
    steps:
      - name: create branch
        id: create-branch
        uses: fortinet/github-action-version-branch@main
        with:
          base-branch: ${{ github.event.inputs.base-branch }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          name-prefix: ${{ github.event.inputs.name-prefix }}
          version-level: ${{ github.event.inputs.version-level }}
          pre-id: ${{ github.event.inputs.pre-id }}
          custom-version: ${{ github.event.inputs.custom-version }}
      # Use the output from the `create-branch` step
      - name: Get the create-branch output
        run: |
          echo "The base-branch was ${{ steps['create-branch'].outputs['base-branch'] }}"
          echo "The base-version was ${{ steps['create-branch'].outputs['base-version'] }}"
          echo "The head-branch was ${{ steps['create-branch'].outputs['head-branch'] }}"
          echo "The head-version was ${{ steps['create-branch'].outputs['head-version'] }}"
          echo "The is-prerelease was ${{ steps['create-branch'].outputs['is-prerelease'] }}"
